apiVersion: v1
items:
- apiVersion: v1
  data:
    api_port: "8080"
    aws_region: eu-central-1
    cluster_domain: cluster.local
    cluster_history_entries: "1000"
    cluster_labels: application:spilo
    cluster_name_label: cluster-name
    connection_pooler_default_cpu_limit: "1"
    connection_pooler_default_cpu_request: 500m
    connection_pooler_default_memory_limit: 100Mi
    connection_pooler_default_memory_request: 100Mi
    connection_pooler_image: registry.opensource.zalan.do/acid/pgbouncer:master-32
    connection_pooler_max_db_connections: "60"
    connection_pooler_mode: transaction
    connection_pooler_number_of_instances: "2"
    connection_pooler_schema: pooler
    connection_pooler_user: pooler
    crd_categories: all
    db_hosted_zone: db.example.com
    debug_logging: "true"
    default_cpu_limit: "1"
    default_cpu_request: 100m
    default_memory_limit: 500Mi
    default_memory_request: 100Mi
    docker_image: ghcr.io/zalando/spilo-16:3.3-p1
    enable_admin_role_for_users: "true"
    enable_crd_registration: "true"
    enable_crd_validation: "true"
    enable_cross_namespace_secret: "false"
    enable_database_access: "true"
    enable_ebs_gp3_migration: "false"
    enable_ebs_gp3_migration_max_size: "1000"
    enable_finalizers: "false"
    enable_init_containers: "true"
    enable_lazy_spilo_upgrade: "false"
    enable_master_load_balancer: "false"
    enable_master_pooler_load_balancer: "false"
    enable_owner_references: "false"
    enable_password_rotation: "false"
    enable_patroni_failsafe_mode: "false"
    enable_persistent_volume_claim_deletion: "true"
    enable_pgversion_env_var: "true"
    enable_pod_antiaffinity: "false"
    enable_pod_disruption_budget: "true"
    enable_postgres_team_crd: "false"
    enable_postgres_team_crd_superusers: "false"
    enable_readiness_probe: "false"
    enable_replica_load_balancer: "false"
    enable_replica_pooler_load_balancer: "false"
    enable_secrets_deletion: "true"
    enable_shm_volume: "true"
    enable_sidecars: "true"
    enable_spilo_wal_path_compat: "true"
    enable_team_id_clustername_prefix: "false"
    enable_team_member_deprecation: "false"
    enable_team_superuser: "false"
    enable_teams_api: "false"
    etcd_host: ""
    external_traffic_policy: Cluster
    kubernetes_use_configmaps: "false"
    logical_backup_cronjob_environment_secret: ""
    logical_backup_docker_image: ghcr.io/zalando/postgres-operator/logical-backup:v1.13.0
    logical_backup_job_prefix: logical-backup-
    logical_backup_provider: s3
    logical_backup_s3_access_key_id: ""
    logical_backup_s3_bucket: my-bucket-url
    logical_backup_s3_bucket_prefix: spilo
    logical_backup_s3_endpoint: ""
    logical_backup_s3_region: ""
    logical_backup_s3_retention_time: ""
    logical_backup_s3_secret_access_key: ""
    logical_backup_s3_sse: AES256
    logical_backup_schedule: 30 00 * * *
    major_version_upgrade_mode: manual
    master_dns_name_format: '{cluster}.{namespace}.{hostedzone}'
    master_legacy_dns_name_format: '{cluster}.{team}.{hostedzone}'
    master_pod_move_timeout: 20m
    max_instances: "-1"
    min_cpu_limit: 250m
    min_instances: "-1"
    min_memory_limit: 250Mi
    minimal_major_version: "12"
    oauth_token_secret_name: postgresql-operator
    pam_configuration: https://info.example.com/oauth2/tokeninfo?access_token= uid
      realm=/employees
    pam_role_name: zalandos
    password_rotation_interval: "90"
    password_rotation_user_retention: "180"
    patroni_api_check_interval: 1s
    patroni_api_check_timeout: 5s
    pdb_master_label_selector: "true"
    pdb_name_format: postgres-{cluster}-pdb
    persistent_volume_claim_retention_policy: when_deleted:retain,when_scaled:retain
    pod_antiaffinity_preferred_during_scheduling: "false"
    pod_antiaffinity_topology_key: kubernetes.io/hostname
    pod_deletion_wait_timeout: 10m
    pod_label_wait_timeout: 10m
    pod_management_policy: ordered_ready
    pod_role_label: spilo-role
    pod_service_account_definition: ""
    pod_service_account_name: postgres-pod
    pod_service_account_role_binding_definition: ""
    pod_terminate_grace_period: 5m
    postgres_superuser_teams: postgres_superusers
    protected_role_names: admin,cron_admin
    ready_wait_interval: 3s
    ready_wait_timeout: 30s
    repair_period: 5m
    replica_dns_name_format: '{cluster}-repl.{namespace}.{hostedzone}'
    replica_legacy_dns_name_format: '{cluster}-repl.{team}.{hostedzone}'
    replication_username: standby
    resource_check_interval: 3s
    resource_check_timeout: 10m
    resync_period: 30m
    ring_log_lines: "100"
    role_deletion_suffix: _deleted
    secret_name_template: '{username}.{cluster}.credentials.{tprkind}.{tprgroup}'
    set_memory_request_to_limit: "false"
    share_pgsocket_with_sidecars: "false"
    spilo_allow_privilege_escalation: "true"
    spilo_privileged: "false"
    storage_resize_mode: pvc
    super_username: postgres
    target_major_version: "16"
    team_admin_role: admin
    team_api_role_configuration: log_statement:all
    teams_api_url: http://fake-teams-api.default.svc.cluster.local
    watched_namespace: '*'
    workers: "8"
  kind: ConfigMap
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","data":{"api_port":"8080","aws_region":"eu-central-1","cluster_domain":"cluster.local","cluster_history_entries":"1000","cluster_labels":"application:spilo","cluster_name_label":"cluster-name","connection_pooler_default_cpu_limit":"1","connection_pooler_default_cpu_request":"500m","connection_pooler_default_memory_limit":"100Mi","connection_pooler_default_memory_request":"100Mi","connection_pooler_image":"registry.opensource.zalan.do/acid/pgbouncer:master-32","connection_pooler_max_db_connections":"60","connection_pooler_mode":"transaction","connection_pooler_number_of_instances":"2","connection_pooler_schema":"pooler","connection_pooler_user":"pooler","crd_categories":"all","db_hosted_zone":"db.example.com","debug_logging":"true","default_cpu_limit":"1","default_cpu_request":"100m","default_memory_limit":"500Mi","default_memory_request":"100Mi","docker_image":"ghcr.io/zalando/spilo-16:3.3-p1","enable_admin_role_for_users":"true","enable_crd_registration":"true","enable_crd_validation":"true","enable_cross_namespace_secret":"false","enable_database_access":"true","enable_ebs_gp3_migration":"false","enable_ebs_gp3_migration_max_size":"1000","enable_finalizers":"false","enable_init_containers":"true","enable_lazy_spilo_upgrade":"false","enable_master_load_balancer":"false","enable_master_pooler_load_balancer":"false","enable_owner_references":"false","enable_password_rotation":"false","enable_patroni_failsafe_mode":"false","enable_persistent_volume_claim_deletion":"true","enable_pgversion_env_var":"true","enable_pod_antiaffinity":"false","enable_pod_disruption_budget":"true","enable_postgres_team_crd":"false","enable_postgres_team_crd_superusers":"false","enable_readiness_probe":"false","enable_replica_load_balancer":"false","enable_replica_pooler_load_balancer":"false","enable_secrets_deletion":"true","enable_shm_volume":"true","enable_sidecars":"true","enable_spilo_wal_path_compat":"true","enable_team_id_clustername_prefix":"false","enable_team_member_deprecation":"false","enable_team_superuser":"false","enable_teams_api":"false","etcd_host":"","external_traffic_policy":"Cluster","kubernetes_use_configmaps":"false","logical_backup_cronjob_environment_secret":"","logical_backup_docker_image":"ghcr.io/zalando/postgres-operator/logical-backup:v1.13.0","logical_backup_job_prefix":"logical-backup-","logical_backup_provider":"s3","logical_backup_s3_access_key_id":"","logical_backup_s3_bucket":"my-bucket-url","logical_backup_s3_bucket_prefix":"spilo","logical_backup_s3_endpoint":"","logical_backup_s3_region":"","logical_backup_s3_retention_time":"","logical_backup_s3_secret_access_key":"","logical_backup_s3_sse":"AES256","logical_backup_schedule":"30 00 * * *","major_version_upgrade_mode":"manual","master_dns_name_format":"{cluster}.{namespace}.{hostedzone}","master_legacy_dns_name_format":"{cluster}.{team}.{hostedzone}","master_pod_move_timeout":"20m","max_instances":"-1","min_cpu_limit":"250m","min_instances":"-1","min_memory_limit":"250Mi","minimal_major_version":"12","oauth_token_secret_name":"postgresql-operator","pam_configuration":"https://info.example.com/oauth2/tokeninfo?access_token= uid realm=/employees","pam_role_name":"zalandos","password_rotation_interval":"90","password_rotation_user_retention":"180","patroni_api_check_interval":"1s","patroni_api_check_timeout":"5s","pdb_master_label_selector":"true","pdb_name_format":"postgres-{cluster}-pdb","persistent_volume_claim_retention_policy":"when_deleted:retain,when_scaled:retain","pod_antiaffinity_preferred_during_scheduling":"false","pod_antiaffinity_topology_key":"kubernetes.io/hostname","pod_deletion_wait_timeout":"10m","pod_label_wait_timeout":"10m","pod_management_policy":"ordered_ready","pod_role_label":"spilo-role","pod_service_account_definition":"","pod_service_account_name":"postgres-pod","pod_service_account_role_binding_definition":"","pod_terminate_grace_period":"5m","postgres_superuser_teams":"postgres_superusers","protected_role_names":"admin,cron_admin","ready_wait_interval":"3s","ready_wait_timeout":"30s","repair_period":"5m","replica_dns_name_format":"{cluster}-repl.{namespace}.{hostedzone}","replica_legacy_dns_name_format":"{cluster}-repl.{team}.{hostedzone}","replication_username":"standby","resource_check_interval":"3s","resource_check_timeout":"10m","resync_period":"30m","ring_log_lines":"100","role_deletion_suffix":"_deleted","secret_name_template":"{username}.{cluster}.credentials.{tprkind}.{tprgroup}","set_memory_request_to_limit":"false","share_pgsocket_with_sidecars":"false","spilo_allow_privilege_escalation":"true","spilo_privileged":"false","storage_resize_mode":"pvc","super_username":"postgres","target_major_version":"16","team_admin_role":"admin","team_api_role_configuration":"log_statement:all","teams_api_url":"http://fake-teams-api.default.svc.cluster.local","watched_namespace":"*","workers":"8"},"kind":"ConfigMap","metadata":{"annotations":{},"name":"postgres-operator","namespace":"default"}}
    name: postgres-operator
    namespace: default
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"ServiceAccount","metadata":{"annotations":{},"name":"postgres-operator","namespace":"default"}}
    name: postgres-operator
    namespace: default
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"rbac.authorization.k8s.io/v1","kind":"ClusterRole","metadata":{"annotations":{},"name":"postgres-operator"},"rules":[{"apiGroups":["acid.zalan.do"],"resources":["postgresqls","postgresqls/status","operatorconfigurations"],"verbs":["create","delete","deletecollection","get","list","patch","update","watch"]},{"apiGroups":["acid.zalan.do"],"resources":["postgresteams"],"verbs":["get","list","watch"]},{"apiGroups":["apiextensions.k8s.io"],"resources":["customresourcedefinitions"],"verbs":["create","get","patch","update"]},{"apiGroups":[""],"resources":["configmaps"],"verbs":["get"]},{"apiGroups":[""],"resources":["events"],"verbs":["create","get","list","patch","update","watch"]},{"apiGroups":[""],"resources":["endpoints"],"verbs":["create","delete","deletecollection","get","list","patch","update","watch"]},{"apiGroups":[""],"resources":["secrets"],"verbs":["create","delete","get","update","patch"]},{"apiGroups":[""],"resources":["nodes"],"verbs":["get","list","watch"]},{"apiGroups":[""],"resources":["persistentvolumeclaims"],"verbs":["delete","get","list","patch","update"]},{"apiGroups":[""],"resources":["persistentvolumes"],"verbs":["get","list","update"]},{"apiGroups":[""],"resources":["pods"],"verbs":["delete","get","list","patch","update","watch"]},{"apiGroups":[""],"resources":["pods/exec"],"verbs":["create"]},{"apiGroups":[""],"resources":["services"],"verbs":["create","delete","get","patch","update"]},{"apiGroups":["apps"],"resources":["statefulsets","deployments"],"verbs":["create","delete","get","list","patch","update"]},{"apiGroups":["batch"],"resources":["cronjobs"],"verbs":["create","delete","get","list","patch","update"]},{"apiGroups":[""],"resources":["namespaces"],"verbs":["get"]},{"apiGroups":["policy"],"resources":["poddisruptionbudgets"],"verbs":["create","delete","get"]},{"apiGroups":[""],"resources":["serviceaccounts"],"verbs":["get","create"]},{"apiGroups":["rbac.authorization.k8s.io"],"resources":["rolebindings"],"verbs":["get","create"]}]}
    name: postgres-operator
  rules:
  - apiGroups:
    - acid.zalan.do
    resources:
    - postgresqls
    - postgresqls/status
    - operatorconfigurations
    verbs:
    - create
    - delete
    - deletecollection
    - get
    - list
    - patch
    - update
    - watch
  - apiGroups:
    - acid.zalan.do
    resources:
    - postgresteams
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - apiextensions.k8s.io
    resources:
    - customresourcedefinitions
    verbs:
    - create
    - get
    - patch
    - update
  - apiGroups:
    - ""
    resources:
    - configmaps
    verbs:
    - get
  - apiGroups:
    - ""
    resources:
    - events
    verbs:
    - create
    - get
    - list
    - patch
    - update
    - watch
  - apiGroups:
    - ""
    resources:
    - endpoints
    verbs:
    - create
    - delete
    - deletecollection
    - get
    - list
    - patch
    - update
    - watch
  - apiGroups:
    - ""
    resources:
    - secrets
    verbs:
    - create
    - delete
    - get
    - update
    - patch
  - apiGroups:
    - ""
    resources:
    - nodes
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - persistentvolumeclaims
    verbs:
    - delete
    - get
    - list
    - patch
    - update
  - apiGroups:
    - ""
    resources:
    - persistentvolumes
    verbs:
    - get
    - list
    - update
  - apiGroups:
    - ""
    resources:
    - pods
    verbs:
    - delete
    - get
    - list
    - patch
    - update
    - watch
  - apiGroups:
    - ""
    resources:
    - pods/exec
    verbs:
    - create
  - apiGroups:
    - ""
    resources:
    - services
    verbs:
    - create
    - delete
    - get
    - patch
    - update
  - apiGroups:
    - apps
    resources:
    - statefulsets
    - deployments
    verbs:
    - create
    - delete
    - get
    - list
    - patch
    - update
  - apiGroups:
    - batch
    resources:
    - cronjobs
    verbs:
    - create
    - delete
    - get
    - list
    - patch
    - update
  - apiGroups:
    - ""
    resources:
    - namespaces
    verbs:
    - get
  - apiGroups:
    - policy
    resources:
    - poddisruptionbudgets
    verbs:
    - create
    - delete
    - get
  - apiGroups:
    - ""
    resources:
    - serviceaccounts
    verbs:
    - get
    - create
  - apiGroups:
    - rbac.authorization.k8s.io
    resources:
    - rolebindings
    verbs:
    - get
    - create
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"rbac.authorization.k8s.io/v1","kind":"ClusterRoleBinding","metadata":{"annotations":{},"name":"postgres-operator"},"roleRef":{"apiGroup":"rbac.authorization.k8s.io","kind":"ClusterRole","name":"postgres-operator"},"subjects":[{"kind":"ServiceAccount","name":"postgres-operator","namespace":"default"}]}
    name: postgres-operator
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: postgres-operator
  subjects:
  - kind: ServiceAccount
    name: postgres-operator
    namespace: default
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"rbac.authorization.k8s.io/v1","kind":"ClusterRole","metadata":{"annotations":{},"name":"postgres-pod"},"rules":[{"apiGroups":[""],"resources":["endpoints"],"verbs":["create","delete","deletecollection","get","list","patch","update","watch"]},{"apiGroups":[""],"resources":["pods"],"verbs":["get","list","patch","update","watch"]},{"apiGroups":[""],"resources":["services"],"verbs":["create"]}]}
    name: postgres-pod
  rules:
  - apiGroups:
    - ""
    resources:
    - endpoints
    verbs:
    - create
    - delete
    - deletecollection
    - get
    - list
    - patch
    - update
    - watch
  - apiGroups:
    - ""
    resources:
    - pods
    verbs:
    - get
    - list
    - patch
    - update
    - watch
  - apiGroups:
    - ""
    resources:
    - services
    verbs:
    - create
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"labels":{"application":"postgres-operator"},"name":"postgres-operator","namespace":"default"},"spec":{"replicas":1,"selector":{"matchLabels":{"name":"postgres-operator"}},"strategy":{"type":"Recreate"},"template":{"metadata":{"labels":{"name":"postgres-operator"}},"spec":{"containers":[{"env":[{"name":"CONFIG_MAP_NAME","value":"postgres-operator"}],"image":"ghcr.io/zalando/postgres-operator:v1.13.0","imagePullPolicy":"IfNotPresent","name":"postgres-operator","resources":{"limits":{"cpu":"500m","memory":"500Mi"},"requests":{"cpu":"100m","memory":"250Mi"}},"securityContext":{"allowPrivilegeEscalation":false,"readOnlyRootFilesystem":true,"runAsNonRoot":true,"runAsUser":1000}}],"serviceAccountName":"postgres-operator"}}}}
    labels:
      application: postgres-operator
    name: postgres-operator
    namespace: default
  spec:
    replicas: 1
    selector:
      matchLabels:
        name: postgres-operator
    strategy:
      type: Recreate
    template:
      metadata:
        labels:
          name: postgres-operator
      spec:
        containers:
        - env:
          - name: CONFIG_MAP_NAME
            value: postgres-operator
          image: ghcr.io/zalando/postgres-operator:v1.13.0
          imagePullPolicy: IfNotPresent
          name: postgres-operator
          resources:
            limits:
              cpu: 500m
              memory: 500Mi
            requests:
              cpu: 100m
              memory: 250Mi
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 1000
            seccompProfile:
              type: RuntimeDefault
            capabilities:
              drop:
              - ALL
        serviceAccountName: postgres-operator
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"name":"postgres-operator","namespace":"default"},"spec":{"ports":[{"port":8080,"protocol":"TCP","targetPort":8080}],"selector":{"name":"postgres-operator"},"type":"ClusterIP"}}
    name: postgres-operator
    namespace: default
  spec:
    ports:
    - port: 8080
      protocol: TCP
      targetPort: 8080
    selector:
      name: postgres-operator
    type: ClusterIP
kind: List
metadata: {}
